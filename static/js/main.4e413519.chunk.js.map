{"version":3,"sources":["Navigation.js","ProjectCard.js","Projects.js","About.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","menuText","linkText","textDecoration","color","Navigation","classes","AppBar","Toolbar","Typography","variant","className","Grid","container","justify","alignItems","item","to","Button","media","height","ProjectCard","props","projectArray","map","project","xs","sm","md","Card","CardActionArea","CardMedia","image","title","CardContent","gutterBottom","component","description","CardActions","linkArray","links","size","href","linkRef","linkName","ProjectArray","About","direction","Main","exact","path","render","App","id","style","position","top","left","right","Boolean","window","location","hostname","match","ReactDOM","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4e413519.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport {Link} from 'react-router-dom';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  menuText: {\n    flexGrow: 1,\n  },\n  linkText: {\n    textDecoration:'none',\n    color: \"inherit\"\n  }\n\n}));\n\nfunction Navigation() {\n  const classes = useStyles();\n  return (\n        <AppBar>\n        <Toolbar>\n            <Typography variant=\"h6\" className={classes.menuText}>\n                benpick\n            </Typography>\n            <Grid container justify=\"flex-end\" spacing = {6} alignItems= \"flex-start\">\n                <Grid item >\n                    <Link to=\"/\" className = {classes.linkText} >\n                        <Button color=\"inherit\" >About me</Button>\n                    </Link>\n                </Grid>\n                <Grid item >\n                    <Link to=\"/projects\" className = {classes.linkText} >\n                        <Button color=\"inherit\" >Projects</Button>\n                    </Link>\n                </Grid>\n\n                <Grid item >\n                    <Link to=\"/resume\" className = {classes.linkText} >\n                        <Button color=\"inherit\">Resume</Button>\n                    </Link>\n                </Grid>\n                <Grid item >\n                    <Link to=\"/contact\" className = {classes.linkText} >\n                        <Button color=\"inherit\">Contact</Button>\n                    </Link>\n                </Grid>\n            </Grid>\n        </Toolbar>\n        </AppBar>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport {Card, CardActionArea,CardContent,CardActions, CardMedia} from '@material-ui/core';\nconst useStyles = makeStyles(() => ({\n    root: {\n        // maxWidth: 345,\n    },\n    media: {\n        height : 200    \n    },\n}))  \nfunction ProjectCard(props) {\n    const classes = useStyles();\n    const { projectArray } = props;\n    return (\n        <Grid container justify=\"center\" spacing={3} alignItems = \"center\" flexGrow = {1} >\n        {projectArray.map((project) => (\n            <Grid item xs={12} sm = {6}md = {3}>\n                <Card className={classes.root}>\n                <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image={project.image}\n                    title= {project.title}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {project.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {project.description}\n                    </Typography>\n                </CardContent>\n                </CardActionArea>\n                <CardActions>\n                {project.linkArray.map((links) => (\n                <Button size=\"small\" color=\"primary\" href = {links.linkRef}>\n                    {links.linkName}\n                </Button>\n                ))}\n                </CardActions>\n                </Card>\n            </Grid>\n        ))}\n      </Grid>\n    //   </div>\n      );\n}\nexport default ProjectCard;\n","const ProjectArray = [\n    {\n        image :  \"https://zdnet3.cbsistatic.com/hub/i/2019/12/02/a93cb043-5690-4f97-8be3-e3025ee8c669/strandhogg.jpg\",\n        title : \"Duck\",\n        description : \"this is a duck\",\n        linkArray : [\n            {\n                linkName : \"Github\",\n                linkRef : \"https://github.com/ben-pick\"\n            },\n            {\n                linkName : \"Demo\",\n                linkRef : \"https://www.youtube.com/watch?v=EssPWjMy54k\"\n            }\n        ]\n    },\n    {\n        image :  \"https://zdnet3.cbsistatic.com/hub/i/2019/12/02/a93cb043-5690-4f97-8be3-e3025ee8c669/strandhogg.jpg\",\n        title : \"Duck\",\n        description : \"this is a duck\",\n        linkArray : [\n            {\n                linkName : \"Github\",\n                linkRef : \"https://github.com/ben-pick\"\n            },\n            {\n                linkName : \"Demo\",\n                linkRef : \"https://www.youtube.com/watch?v=EssPWjMy54k\"\n            }\n        ]\n    },\n    {\n        image :  \"https://zdnet3.cbsistatic.com/hub/i/2019/12/02/a93cb043-5690-4f97-8be3-e3025ee8c669/strandhogg.jpg\",\n        title : \"Duck\",\n        description : \"this is a duck\",\n        linkArray : [\n            {\n                linkName : \"Github\",\n                linkRef : \"https://github.com/ben-pick\"\n            },\n            {\n                linkName : \"Demo\",\n                linkRef : \"https://www.youtube.com/watch?v=EssPWjMy54k\"\n            }\n        ]\n    },\n    {\n        image :  \"https://zdnet3.cbsistatic.com/hub/i/2019/12/02/a93cb043-5690-4f97-8be3-e3025ee8c669/strandhogg.jpg\",\n        title : \"Duck\",\n        description : \"this is a duck\",\n        linkArray : [\n            {\n                linkName : \"Github\",\n                linkRef : \"https://github.com/ben-pick\"\n            },\n            {\n                linkName : \"Demo\",\n                linkRef : \"https://www.youtube.com/watch?v=EssPWjMy54k\"\n            }\n        ]\n    },\n   \n    \n\n    \n]\nexport default ProjectArray;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport {Card, CardActionArea,CardContent,CardActions, CardMedia, Container, Box} from '@material-ui/core';\nfunction About() {\n    return (\n\n          <Grid container direction = \"column\" justify = \"center\" alignItems=\"center\">\n              <Grid item>\n            <Typography variant = \"h1\" color = \"primary\">\n                Security Engineer\n            </Typography>\n            </Grid>\n            <Grid item>\n            <Typography variant = \"h2\" color = \"primary\">\n                Java | Kotlin | JavaScript | Android | Scala | C\n            </Typography>\n            </Grid>\n        </Grid>\n        \n    )\n}\nexport default About;","import React from 'react';\n\nimport './App.css';\nimport {Switch, Route} from 'react-router-dom';\nimport ProjectCard from './ProjectCard';\nimport ProjectArray from './Projects'\nimport About from './About';\n\nfunction Main() {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component = {About}>\n            </Route>\n            <Route  path=\"/projects\" render = {(props) => <ProjectCard {... props}projectArray = {ProjectArray}/>}/>\n            <Route  path=\"/resume\">\n                Resume\n            </Route>\n            <Route  path=\"/contact\">\n                Contact\n            </Route>\n      </Switch>\n    )\n}\nexport default Main;","import React from 'react';\n\nimport './App.css';\nimport Navigation from './Navigation';\nimport Main from './Main';\nimport { Box,Grid } from '@material-ui/core';\nfunction App() {\n  return (\n    <Grid id=\"whole-app\" style={{ position: \"relative\", height: \"100vh\" }}>\n\n  <Grid\n    id=\"appbar\"\n    style={{ position: \"sticky\", top: 0, left: 0, right: 0 }}\n  >    \n  <Navigation/>    \n  </Grid>\n  <Grid\n    id=\"main\"\n    container\n    justify=\"center\"\n    alignItems=\"center\"\n    style={{ height: \"inherit\" }}\n  >\n\n    <Main/>\n    </Grid>\n    </Grid>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router}  from 'react-router-dom';\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename = \"/\">\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}